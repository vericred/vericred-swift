//
// ProvidersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension vericred_clientAPI {


public class ProvidersAPI: APIBase {
    /**
     Find providers by term and zip code
     
     - parameter searchTerm: (query) String to search by 
     - parameter zipCode: (query) Zip Code to search near 
     - parameter acceptsInsurance: (query) Limit results to Providers who accept at least one insurance plan.  Note that the inverse of this filter is not supported and any value will evaluate to true (optional)
     - parameter hiosIds: (query) HIOS id of one or more plans (optional)
     - parameter page: (query) Page number (optional)
     - parameter perPage: (query) Number of records to return per page (optional)
     - parameter radius: (query) Radius (in miles) to use to limit results (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func providersGet(searchTerm searchTerm: String, zipCode: String, acceptsInsurance: String? = nil, hiosIds: [String]? = nil, page: String? = nil, perPage: String? = nil, radius: String? = nil, completion: ((data: InlineResponse200?, error: ErrorType?) -> Void)) {
        providersGetWithRequestBuilder(searchTerm: searchTerm, zipCode: zipCode, acceptsInsurance: acceptsInsurance, hiosIds: hiosIds, page: page, perPage: perPage, radius: radius).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Find providers by term and zip code
     - GET /providers
     - All `Provider` searches require a `zip_code`, which we use for weighting
the search results to favor `Provider`s that are near the user.  For example,
we would want "Dr. John Smith" who is 5 miles away to appear before
"Dr. John Smith" who is 100 miles away.

The weighting also allows for non-exact matches.  In our prior example, we
would want "Dr. Jon Smith" who is 2 miles away to appear before the exact
match "Dr. John Smith" who is 100 miles away because it is more likely that
the user just entered an incorrect name.

The free text search also supports Specialty name search and "body part"
Specialty name search.  So, searching "John Smith nose" would return
"Dr. John Smith", the ENT Specialist before "Dr. John Smith" the Internist.


     - examples: [{contentType=application/json, example={
  "meta" : {
    "total" : 100
  },
  "providers" : [ {
    "accepting_change_of_payor_patients" : false,
    "accepting_medicaid_patients" : true,
    "accepting_medicare_patients" : false,
    "accepting_private_patients" : true,
    "accepting_referral_patients" : false,
    "city" : "New York",
    "email" : "foo@bar.com",
    "gender" : "M",
    "first_name" : "John",
    "id" : 1013965003,
    "last_name" : "Doe",
    "middle_name" : "Quintus",
    "personal_phone" : "2035551800",
    "phone" : "2223334444",
    "presentation_name" : "Dr. John Doe",
    "specialty" : "Internal Medicine",
    "state" : "NY",
    "state_id" : 1,
    "street_line_1" : "123 Fake Street",
    "street_line_2" : "",
    "suffix" : null,
    "title" : "Dr.",
    "type" : "organization",
    "zip_code" : "11215"
  } ]
}}]
     
     - parameter searchTerm: (query) String to search by 
     - parameter zipCode: (query) Zip Code to search near 
     - parameter acceptsInsurance: (query) Limit results to Providers who accept at least one insurance plan.  Note that the inverse of this filter is not supported and any value will evaluate to true (optional)
     - parameter hiosIds: (query) HIOS id of one or more plans (optional)
     - parameter page: (query) Page number (optional)
     - parameter perPage: (query) Number of records to return per page (optional)
     - parameter radius: (query) Radius (in miles) to use to limit results (optional)

     - returns: RequestBuilder<InlineResponse200> 
     */
    public class func providersGetWithRequestBuilder(searchTerm searchTerm: String, zipCode: String, acceptsInsurance: String? = nil, hiosIds: [String]? = nil, page: String? = nil, perPage: String? = nil, radius: String? = nil) -> RequestBuilder<InlineResponse200> {
        let path = "/providers"
        let URLString = vericred_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "accepts_insurance": acceptsInsurance,
            "hios_ids": hiosIds,
            "page": page,
            "per_page": perPage,
            "radius": radius,
            "search_term": searchTerm,
            "zip_code": zipCode
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<InlineResponse200>.Type = vericred_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     Find a specific Provider
     
     - parameter npi: (path) NPI number 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func providersNpiGet(npi npi: String, completion: ((data: InlineResponse2001?, error: ErrorType?) -> Void)) {
        providersNpiGetWithRequestBuilder(npi: npi).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Find a specific Provider
     - GET /providers/{npi}
     - To retrieve a specific provider, just perform a GET using his NPI number


     - examples: [{contentType=application/json, example={
  "provider" : {
    "accepting_change_of_payor_patients" : false,
    "accepting_medicaid_patients" : true,
    "accepting_medicare_patients" : false,
    "accepting_private_patients" : true,
    "accepting_referral_patients" : false,
    "city" : "New York",
    "email" : "foo@bar.com",
    "gender" : "M",
    "first_name" : "John",
    "hios_ids" : [ "44580NY0360001" ],
    "id" : 1013965003,
    "last_name" : "Doe",
    "middle_name" : "Quintus",
    "personal_phone" : "2035551800",
    "phone" : "2223334444",
    "presentation_name" : "Dr. John Doe",
    "specialty" : "Internal Medicine",
    "state" : "NY",
    "state_id" : 1,
    "street_line_1" : "123 Fake Street",
    "street_line_2" : "",
    "suffix" : null,
    "title" : "Dr.",
    "type" : "organization",
    "zip_code" : "11215"
  }
}}]
     
     - parameter npi: (path) NPI number 

     - returns: RequestBuilder<InlineResponse2001> 
     */
    public class func providersNpiGetWithRequestBuilder(npi npi: String) -> RequestBuilder<InlineResponse2001> {
        var path = "/providers/{npi}"
        path = path.stringByReplacingOccurrencesOfString("{npi}", withString: "\(npi)", options: .LiteralSearch, range: nil)
        let URLString = vericred_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<InlineResponse2001>.Type = vericred_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

}
}
