//
// DrugPackagesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension vericred_clientAPI {


public class DrugPackagesAPI: APIBase {
    /**
     Formulary Drug Package Search
     
     - parameter formularyId: (path) ID of the Formulary in question 
     - parameter ndcPackageCode: (path) ID of the DrugPackage in question 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func showFormularyDrugPackageCoverage(formularyId formularyId: String, ndcPackageCode: String, completion: ((data: FormularyDrugPackageResponse?, error: ErrorType?) -> Void)) {
        showFormularyDrugPackageCoverageWithRequestBuilder(formularyId: formularyId, ndcPackageCode: ndcPackageCode).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Formulary Drug Package Search
     - GET /formularies/{formularyId}/drug_packages/{ndcPackageCode}
     - Search for coverage by Formulary and DrugPackage ID
     - API Key:
       - type: apiKey Vericred-Api-Key 
       - name: Vericred-Api-Key
     - examples: [{contentType=application/json, example={
  "coverage" : {
    "med_id" : "",
    "drug_package_id" : "aeiou",
    "step_therapy" : true,
    "tier" : "aeiou",
    "quantity_limit" : true,
    "prior_authorization" : true,
    "plan_id" : "aeiou"
  },
  "drug_package" : {
    "med_id" : "",
    "description" : "aeiou",
    "id" : "aeiou"
  },
  "formulary" : {
    "name" : "aeiou",
    "id" : ""
  }
}}]
     
     - parameter formularyId: (path) ID of the Formulary in question 
     - parameter ndcPackageCode: (path) ID of the DrugPackage in question 

     - returns: RequestBuilder<FormularyDrugPackageResponse> 
     */
    public class func showFormularyDrugPackageCoverageWithRequestBuilder(formularyId formularyId: String, ndcPackageCode: String) -> RequestBuilder<FormularyDrugPackageResponse> {
        var path = "/formularies/{formularyId}/drug_packages/{ndcPackageCode}"
        path = path.stringByReplacingOccurrencesOfString("{formularyId}", withString: "\(formularyId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{ndcPackageCode}", withString: "\(ndcPackageCode)", options: .LiteralSearch, range: nil)
        let URLString = vericred_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<FormularyDrugPackageResponse>.Type = vericred_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
}
